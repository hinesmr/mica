%!PS-Adobe-3.0
%%Title: book1_sample.txt
%%Creator: paps version 0.6.7 by Dov Grobgeld
%%Pages: (atend)
%%BoundingBox: 0 0 595 841
%%BeginProlog
%%Orientation: Portrait
/papsdict 1 dict def
papsdict begin

/inch {72 mul} bind def
/mm {1 inch 25.4 div mul} bind def

% override setpagedevice if it is not defined
/setpagedevice where {
    pop % get rid of its dictionary
    /setpagesize { 
       3 dict begin
         /pageheight exch def 
         /pagewidth exch def
         /orientation 0 def
         % Exchange pagewidth and pageheight so that pagewidth is bigger
         pagewidth pageheight gt {  
             pagewidth
             /pagewidth pageheight def
             /pageheight exch def
             /orientation 3 def
         } if
         2 dict
         dup /PageSize [pagewidth pageheight] put
         dup /Orientation orientation put
         setpagedevice 
       end
    } def
}
{
    /setpagesize { pop pop } def
} ifelse
/duplex {
    statusdict /setduplexmode known 
    { statusdict begin setduplexmode end } {pop} ifelse
} def
/tumble {
    statusdict /settumble known
   { statusdict begin settumble end } {pop} ifelse
} def
% Turn the page around
/turnpage {
  90 rotate
  0 pageheight neg translate
} def
% User settings
/pagewidth 595 def
/pageheight 841 def
pagewidth pageheight setpagesize
/column_width 523 def
/bodyheight 769 def
/lmarg 36 def
/ytop 805 def
/do_separation_line true def
/do_landscape false def
/do_tumble true def
/do_duplex true def
% Procedures to translate position to first and second column
/lw 20 def % whatever
/setnumcolumns {
    /numcolumns exch def
    /firstcolumn { /xpos lmarg def /ypos ytop def} def
    /nextcolumn { 
      do_separation_line {
          xpos column_width add gutter_width 2 div add % x start
           ytop lw add moveto              % y start
          0 bodyheight lw add neg rlineto 0 setlinewidth stroke
      } if
      /xpos xpos column_width add gutter_width add def 
      /ypos ytop def
    } def
} def

1 setnumcolumns
/showline {
    /y exch def
    /s exch def
    xpos y moveto 
    column_width 0 rlineto stroke
    xpos y moveto /Helvetica findfont 20 scalefont setfont s show
} def
/paps_bop {  % Beginning of page definitions
    papsdict begin
    gsave
    do_landscape {turnpage} if 
    % ps2pdf gets wrong orientation without this!
    /Helvetica findfont setfont 100 100 moveto ( ) show
    firstcolumn
    end
} def

/paps_eop {  % End of page cleanups
    grestore    
} def
%%BeginProlog
/papsdict 1 dict def
papsdict begin

/conicto {
    /to_y exch def
    /to_x exch def
    /conic_cntrl_y exch def
    /conic_cntrl_x exch def
    currentpoint
    /p0_y exch def
    /p0_x exch def
    /p1_x p0_x conic_cntrl_x p0_x sub 2 3 div mul add def
    /p1_y p0_y conic_cntrl_y p0_y sub 2 3 div mul add def
    /p2_x p1_x to_x p0_x sub 1 3 div mul add def
    /p2_y p1_y to_y p0_y sub 1 3 div mul add def
    p1_x p1_y p2_x p2_y to_x to_y curveto
} bind def
/start_ol { gsave } bind def
/end_ol { closepath fill grestore } bind def
/draw_char { fontdict begin gsave 0.001000 dup scale last_x last_y translate load exec end grestore} def
/goto_xy { fontdict begin /last_y exch def /last_x exch def end } def
/goto_x { fontdict begin /last_x exch def end } def
/fwd_x { fontdict begin /last_x exch last_x add def end } def
/c /curveto load def
/x /conicto load def
/l /lineto load def
/m /moveto load def
end
/paps_exec {
  1 dict begin
  /ps exch def
  /len ps length def
  /pos 0 def

  % Loop over all the characters of the string
  {
    pos len eq {exit} if

    % Get character at pos
    /ch ps pos 1 getinterval def
    
    % check for +
    (+) ch eq {
      /pos 1 pos add def
      /xp ps pos 8 getinterval cvi def
      /yp ps pos 8 add 8 getinterval cvi def
      /pos 16 pos add def
      papsdict begin xp yp goto_xy end
    } {
      (*) ch eq {
        /pos 1 pos add def
        /xp ps pos 8 getinterval cvi def
        /pos 8 pos add def
        papsdict begin xp goto_x end
      } { (>) ch eq {
          /pos 1 pos add def
          /xp ps pos 4 getinterval cvi def
          /pos 4 pos add def
          papsdict begin xp 2 mul fwd_x end
        } { (-) ch eq {
            /pos 1 pos add def
            /xp ps pos 4 getinterval cvi def
            /pos 4 pos add def
            papsdict begin xp neg 2 mul fwd_x end
          } {
              % Must be a 3 char sym. Load and exec
              /name ps pos 3 getinterval def
              papsdict begin name draw_char end
              /pos 3 pos add def
            } ifelse
          } ifelse
        } ifelse
    } ifelse
  } loop
  end
} def
/fontdict 1 dict def
papsdict begin fontdict begin
/AAA { start_ol
6264 360 m
5827 108 5364 -18 x
4900 -144 4416 -144 x
2881 -144 2016 762 x
1152 1670 1152 3276 x
1152 4881 2016 5788 x
2881 6696 4416 6696 x
4894 6696 5349 6572 x
5803 6449 6264 6192 x
6264 5040 l
5834 5420 5401 5590 x
4968 5760 4419 5760 x
3399 5760 2851 5115 x
2304 4471 2304 3276 x
2304 2085 2855 1438 x
3406 792 4419 792 x
4984 792 5432 967 x
5881 1143 6264 1512 x
6264 360 l
7272 fwd_x
end_ol
 } def
/BAA { start_ol
6192 4050 m
6192 0 l
5112 0 l
5112 4050 l
5112 4930 4798 5344 x
4485 5760 3817 5760 x
3054 5760 2642 5225 x
2232 4692 2232 3694 x
2232 0 l
1152 0 l
1152 9144 l
2232 9144 l
2232 5555 l
2521 6116 3016 6405 x
3511 6696 4188 6696 x
5196 6696 5693 6039 x
6192 5382 6192 4050 x
7272 fwd_x
end_ol
 } def
/CAA { start_ol
1152 2502 m
1152 6552 l
2232 6552 l
2232 2502 l
2232 1621 2548 1206 x
2864 792 3526 792 x
4296 792 4703 1325 x
5112 1859 5112 2857 x
5112 6552 l
6192 6552 l
6192 0 l
5112 0 l
5112 1008 l
4822 441 4323 148 x
3825 -144 3159 -144 x
2143 -144 1647 513 x
1152 1170 1152 2502 x
4455 9648 m
5616 9648 l
3710 7416 l
2808 7416 l
4455 9648 l
7272 fwd_x
end_ol
 } def
/DAA { start_ol
6192 4050 m
6192 0 l
5112 0 l
5112 4050 l
5112 4930 4798 5344 x
4485 5760 3817 5760 x
3054 5760 2642 5225 x
2232 4692 2232 3694 x
2232 0 l
1152 0 l
1152 6552 l
2232 6552 l
2232 5555 l
2521 6116 3016 6405 x
3511 6696 4188 6696 x
5196 6696 5693 6039 x
6192 5382 6192 4050 x
7272 fwd_x
end_ol
 } def
/EAA { start_ol
1368 9144 m
2448 9144 l
2448 3831 l
5316 6552 l
6646 6552 l
4027 4083 l
7056 0 l
5719 0 l
3261 3381 l
2448 2626 l
2448 0 l
1368 0 l
1368 9144 l
7272 fwd_x
end_ol
 } def
/FAA { start_ol
1944 8928 m
5400 8928 l
5400 8064 l
1944 8064 l
1944 8928 l
1152 2502 m
1152 6552 l
2232 6552 l
2232 2502 l
2232 1621 2548 1206 x
2864 792 3526 792 x
4296 792 4703 1325 x
5112 1859 5112 2857 x
5112 6552 l
6192 6552 l
6192 0 l
5112 0 l
5112 1008 l
4822 441 4323 148 x
3825 -144 3159 -144 x
2143 -144 1647 513 x
1152 1170 1152 2502 x
7272 fwd_x
end_ol
 } def
/GAA { start_ol
5472 5688 m
3960 5688 l
3960 6903 l
5112 9144 l
6048 9144 l
5472 6903 l
5472 5688 l
2736 5688 m
1224 5688 l
1224 6903 l
2448 9144 l
3312 9144 l
2736 6903 l
2736 5688 l
7272 fwd_x
end_ol
 } def
/HAA { start_ol
4536 9144 m
6048 9144 l
6048 7935 l
4824 5688 l
3960 5688 l
4536 7935 l
4536 9144 l
1800 9144 m
3312 9144 l
3312 7935 l
2160 5688 l
1224 5688 l
1800 7935 l
1800 9144 l
7272 fwd_x
end_ol
 } def
end end
%%EndPrologue
%%EndPrologue
%%Page: 1 1
paps_bop
()paps_exec
()paps_exec
(+   72360  762880AAABAACAADAA+  130536  762880EAAFAADAA+  246888  762880GAA+  406872  762880HAA+  457776  762880GAA+  501408  762880HAA)paps_exec
(+   50544  748840GAA+  312336  748840HAA)paps_exec
(+   50544  734800GAA+  392328  734800HAA)paps_exec
()paps_exec
(+   79632  706720GAA+  152352  706720HAA+  210528  706720GAA+  246888  706720HAA)paps_exec
()paps_exec
paps_eop
showpage
%%Pages: 1
%%Trailer
%%EOF
